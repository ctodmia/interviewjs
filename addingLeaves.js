//Given a binary tree with nodes having a single digit int (0-9),
//find the sum of all the numbers generated by all the paths starting
//from root to leaf nodes

/* Illustration of a tree with three leaves:

var treeLeaf = {
  	value: 7, children: [
  		{
	  		value: 5, children: [
	  			{
		  			value: 3, children: [
		  				{
		  					value: 1, children: []
		  				}
		  			]
	  			},

	  			{
	  				value: 4, children: []
	  			}
	  		]
  		},

  		{
  			value: 6, children: []
  		}
  	]
}

treeLeaf will construct the following tree
  *
  *       7 <- root
  *      / \
  *     5    6 <- leaf
  *    / \
  *   3   4 <- leaf
  *  /
  * 1 <- leaf
  *
  * Your answer should yield the following 
  *
  * sumLeaves(treeLeaf); // 8361;
  *
  *	because 7531 + 754 + 76 = 8361;
  *
  */


/*
	Problem Analysis

	/ every node on tree is an object with a value and an array of children
	/ a leaf is a tree with an empty array of children
	/ since we want concatenated value of all paths from root to leaf
		/I will traverse the tree depth first. 
	/ a path ends when it reaches a leaf

	create a function called sumLeaves that takes a tree object as a parameter. 
	find the sum of all numbers generated by all the paths from root to leaf. 
*/